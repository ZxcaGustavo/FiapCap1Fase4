#include <DHT.h>
#include <Wire.h>
#include <LiquidCrystal_I2C.h>

// Configuração do display LCD (endereço I2C, colunas, linhas)
#define LCD_ADDRESS 0x27  // Verifique o endereço do seu LCD I2C se necessário
LiquidCrystal_I2C lcd(LCD_ADDRESS, 16, 2);

// Defina os pinos dos componentes
const int relayPin = 3;       // Pino do Relé
const int ldrPin = 0;         // Pino do LDR (analógico)
const int dhtPin = 15;        // Pino do DHT22
const int buttonPin1 = 14;    // Pino do primeiro botão
const int buttonPin2 = 32;    // Pino do segundo botão

// Defina o tipo do DHT22
#define DHTTYPE DHT22

DHT dht(dhtPin, DHTTYPE);

void setup() {
  Serial.begin(9600);
  delay(2000); // Aguarda inicialização do Monitor Serial
  Serial.println("Inicializando sensores, relé e LCD...");

  // Configuração dos pinos
  pinMode(relayPin, OUTPUT);          // Configura o pino do relé como saída
  pinMode(buttonPin1, INPUT_PULLUP);  // Configura o pino do botão 1 como entrada com pull-up interno
  pinMode(buttonPin2, INPUT_PULLUP);  // Configura o pino do botão 2 como entrada com pull-up interno

  // Inicializa o sensor DHT22
  dht.begin();

  // Inicializa o LCD
  Wire.begin(17, 22);  // Configura SDA e SCL nos pinos definidos
  lcd.init();
  lcd.backlight();     // Ativa a luz de fundo do LCD
  lcd.setCursor(0, 0);
  lcd.print("Sistema Pronto!");
  delay(2000); // Aguarda 2 segundos antes de começar o loop
}

void loop() {
  // Leitura dos sensores
  float temperatura = dht.readTemperature();
  float umidade = dht.readHumidity();
  int ldrValue = analogRead(ldrPin);

  // Verificação da leitura do DHT22
  if (isnan(temperatura) || isnan(umidade)) {
    Serial.println("Erro ao ler o sensor DHT22.");
    lcd.setCursor(0, 0);
    lcd.print("Erro no DHT22");
    lcd.setCursor(0, 1);
    lcd.print("                ");  // Limpa linha
  } else {
    // Envia para o Serial Plotter com nomes de variáveis
    Serial.print("Temperatura:");
    Serial.print(temperatura);
    Serial.print("\t");  // Adiciona um separador de tabulação

    Serial.print("Umidade:");
    Serial.print(umidade);
    Serial.print("\t");  // Adiciona um separador de tabulação

    // Envia também o valor do LDR
    Serial.print("LDR:");
    Serial.println(ldrValue);

    // Exibe no LCD
    lcd.setCursor(0, 0);
    lcd.print("Temp: ");
    lcd.print(temperatura);
    lcd.print("C");
    lcd.setCursor(0, 1);
    lcd.print("Umid: ");
    lcd.print(umidade);
    lcd.print("% ");
  }

  // Leitura dos botões
  int buttonState1 = digitalRead(buttonPin1);
  int buttonState2 = digitalRead(buttonPin2);

  if (buttonState1 == LOW) {
    Serial.println("Botão 1 Pressionado!");
  } else {
    Serial.println("Botão 1 Solto.");
  }

  if (buttonState2 == LOW) {
    Serial.println("Botão 2 Pressionado!");
  } else {
    Serial.println("Botão 2 Solto.");
  }

  // Controle do relé com base nas leituras
  if (buttonState1 == LOW || buttonState2 == LOW || ldrValue < 500 || temperatura > 25 || umidade < 60) {
    digitalWrite(relayPin, HIGH);  // Liga o relé
    Serial.println("Relé Ligado");

    // Exibe status do relé no LCD
    lcd.setCursor(11, 1);
    lcd.print("Lig.");
  } else {
    digitalWrite(relayPin, LOW);   // Desliga o relé
    Serial.println("Relé Desligado");

    // Exibe status do relé no LCD
    lcd.setCursor(11, 1);
    lcd.print("Des.");
  }

  delay(1000); // Aguarda 1 segundo antes de nova leitura
}
